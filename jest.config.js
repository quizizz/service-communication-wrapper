/** @type {import('ts-jest/dist/types').InitialOptionsTsJest} */
module.exports = {
    preset: 'ts-jest',
    testEnvironment: 'node',
    verbose: true,
    bail: true,
    clearMocks: true,
    silent: true,
    collectCoverageFrom: ['./src/**/*.{js,ts}'],
    collectCoverage: true,
    coverageReporters: ['json-summary', 'json', 'html'],
    testLocationInResults: true,
    testMatch: ['**/tests/unit/**/*.[t]s?(x)'],
    json: true,
    reporters: ['jest-junit', 'default'],
    globals: {
      'ts-jest': {
        isolatedModules: true,
      },
    },
    globalSetup: '<rootDir>/tests/setup/global-setup.ts',
    rootDir: './',
    moduleNameMapper: {
      '^@app/(.*)$': '<rootDir>/src/$1',
      '^@tests/(.*)$': '<rootDir>/tests/$1',
    },
    maxWorkers: 4,
    maxConcurrency: 4,
    coveragePathIgnorePatterns: [
      '<rootDir>/src/bootstrap',
      '<rootDir>/src/apps',
      '<rootDir>/src/config',
      '<rootDir>/src/core',
      '<rootDir>/src/errors',
      '<rootDir>/src/main.ts',
      '<rootDir>/src/types.ts',
      '<rootDir>/src/routes',
      '<rootDir>/src/models',
      '<rootDir>/src/utils',
      '<rootDir>/src/domains/app.ts',
      '<rootDir>/src/domains/user.ts',
      '<rootDir>/src/middlewares',
      '<rootDir>/src/controllers/404.controller.ts',
      '<rootDir>/src/controllers/base.controller.ts',
      '<rootDir>/src/controllers/factory.controller.ts',
      '<rootDir>/src/controllers/http.controller.ts',
      '<rootDir>/src/controllers/kafka.controller.ts',
      '<rootDir>/src/controllers/meta.controller.ts',
      '<rootDir>/src/controllers/index.ts',
      '<rootDir>/src/controllers/helpers.ts',
      '<rootDir>/src/domains/user',
      '<rootDir>/src/domains/subscription',
      '<rootDir>/src/domains/question/utils.ts',
      '<rootDir>/src/helpers',
      '<rootDir>/src/domains/question/structure/index.ts',
      '<rootDir>/src/services/context-storage.service.ts',
      '<rootDir>/src/static',
    ],
  };